###################################################################### 
# Largely implemented from Phantas0s/.dotfiles:
#    https://github.com/Phantas0s/.dotfiles/blob/master/tmux/tmux.conf
######################################################################

# Use CTRL-Space as leader
unbind C-b
set -g prefix C-Space

# Leader-r will reload this file
unbind r
bind r source-file ~/.tmux.conf \; display "reloaded ~/.tmux.conf"

# Allow the mouse to interace with tmux
set -g mouse on

# Set up terminal color
set -g default-terminal "tmux-256color"

# Set v and h to split vertical and horizontal
unbind v
unbind h
unbind %
unbind '"'
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Jump to panes with CTRL-<homerow-keys>
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Grow the limit of the command history
set -g history-limit 100000

# Rename windows with leader-n, create windows with leader w
unbind n
unbind w
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# Start tab numbering with 1 instead of 0
set -g base-index 1
set-window-option -g pane-base-index 1

# Navigate last/next tabs with ALT-j/k
bind -n M-j previous-window
bind -n M-k next-window

# Use vim-style navigation for copy mode
set-window-option -g mode-keys vi

# Use system clipboard
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

source ~/.config/nvim/lua/core/plugin_config/tmuxline.vim
